[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "tessera"
version = "0.1.0"
description = "Multi-paradigm embedding library with ColBERT, dense, sparse, and vision-language models"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "Apache-2.0" }
authors = [
    { name = "Tessera Contributors" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "embeddings",
    "colbert",
    "multi-vector",
    "semantic-search",
    "nlp",
    "machine-learning",
    "rust",
]
dependencies = [
    "numpy>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "marimo>=0.17.0",
    "pandas>=2.3.3",
    "plotly>=6.3.1",
    "pytest>=8.4.2",
    "pytest-benchmark>=5.1.0",
    "scikit-learn>=1.6.1",
    "scipy>=1.13.1",
    "umap-learn>=0.5.9.post2",
]

[project.urls]
Homepage = "https://github.com/tessera-embeddings/tessera"
Repository = "https://github.com/tessera-embeddings/tessera"
Documentation = "https://docs.rs/tessera"

[tool.maturin]
module-name = "tessera"
features = ["python"]
# Build with default features plus python feature
# The python feature pulls in pyo3 and numpy dependencies

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

