name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build (Linux - core features only)
      if: runner.os == 'Linux'
      run: cargo build --no-default-features --verbose

    - name: Build (macOS - all features)
      if: runner.os == 'macOS'
      run: cargo build --verbose

    - name: Run tests (Linux - core features only)
      if: runner.os == 'Linux'
      run: cargo test --no-default-features --verbose

    - name: Run tests (macOS - all features)
      if: runner.os == 'macOS'
      run: cargo test --verbose
    
    - name: Run tests (with Metal on macOS)
      if: runner.os == 'macOS'
      run: cargo test --features metal --verbose

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Run clippy
      run: cargo clippy --no-default-features --features python -- -D warnings  # Core + Python bindings only (lib code, not tests)
